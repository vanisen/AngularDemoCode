{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/forms/forms.component.html","webpack:///./src/app/forms/forms.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/postBooking.model.ts","webpack:///./src/app/property/property.component.css","webpack:///./src/app/property/property.component.html","webpack:///./src/app/property/property.component.ts","webpack:///./src/app/property/propertyFilter.pipe.ts","webpack:///./src/app/services/propertyService.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".txtcolor{\\n    color: white\\n}\\n.bg-color{\\n    background-color:#020761;\\n}\"","module.exports = \"<div class=\\\"container\\\" style=\\\"background: #fff;\\\">\\n    <nav class=\\\"navbar navbar-expand-sm navbar-inverse bg-color\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link txtcolor\\\"  [routerLink]=\\\"['/property']\\\">Available Property</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link txtcolor\\\"  [routerLink]=\\\"['/form']\\\">Book Property</a>\\n          </li>\\n        </ul>\\n    </nav>\\n        <div>\\n          <router-outlet></router-outlet>\\n        </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mean';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PropertyComponent } from './property/property.component';\nimport { PropertyService } from './services/propertyService.service';\nimport { HomeComponent } from './home/home.component';\nimport { FormsComponent } from './forms/forms.component';\nimport { FilterPipe } from './property/propertyFilter.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PropertyComponent,\n    HomeComponent,\n    FormsComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {path: 'property', component: PropertyComponent},\n      {path: 'form', component: FormsComponent},\n      {path: 'home', component: HomeComponent},\n      {path: '', redirectTo: 'property', pathMatch: 'full'}\n  ]),\n  ],\n  providers: [PropertyService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"panel panel-primary col-md-18  justify-content-center align-items-center container\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <form #form=\\\"ngForm\\\" novalidate (submit)=\\\"submitForm(form)\\\">\\r\\n          <br/>  \\r\\n          <h5>Enter Your Detail To Book Property</h5>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"name.invalid && name.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Property Name</label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"name\\\" \\r\\n                      placeholder=\\\"enter property name ( required )\\\"\\r\\n                      id=\\\"name\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"model.name\\\"\\r\\n                      \\r\\n                      #name=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.invalid && name.dirty\\\">\\r\\n                        Please Enter Name\\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"city.invalid && city.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"city\\\">City</label>\\r\\n                <input type=\\\"input\\\" \\r\\n                      name=\\\"city\\\" \\r\\n                      placeholder=\\\"Enter city name\\\"\\r\\n                      id=\\\"city\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"model.city\\\"\\r\\n                      #city=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"city.invalid && city.dirty\\\">\\r\\n                        Please Enter City\\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"date.invalid && date.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"date\\\">Date </label>\\r\\n                <input type=\\\"date\\\" \\r\\n                      name=\\\"date\\\" \\r\\n                      placeholder=\\\"select date\\\"\\r\\n                      id=\\\"date\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"model.date\\\"\\r\\n                      #date=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"date.invalid && date.dirty\\\">\\r\\n                        Please select date\\r\\n                      </div>\\r\\n            </div>\\r\\n          \\r\\n          <button class=\\\"btn btn-success\\\" \\r\\n                  type=\\\"submit\\\" \\r\\n                  [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n         </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PostBooking} from '../models/postBooking.model';\r\nimport { PropertyService } from '../services/propertyService.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html'\r\n})\r\n\r\nexport class FormsComponent {\r\n\r\n  model = new PostBooking('', '', '');\r\n  hasCodeLangError: Boolean = false;\r\n  disbableSubmit: Boolean = false;\r\n\r\n  constructor( private propertyService: PropertyService,\r\n                private _route: Router) { }\r\n\r\n\r\n  submitForm(form: NgForm): void {\r\n    // console.log(form.value);\r\n    this.propertyService.postBooking(form.value)\r\n        .subscribe(data => console.log('success', data));\r\n\r\n    this._route.navigate(['/property']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>Mobile Phone Wiki</h1>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <img src=\\\"../../assets/home.jpg\\\" class=\\\"img-thumbnail\\\"/>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\n\r\nexport class HomeComponent {\r\n\r\n}\r\n","export class PostBooking {\r\n    constructor(\r\n        public name: string,\r\n        public city: string,\r\n        public date: string\r\n    ) {}\r\n}\r\n","module.exports = \".divcenter{\\n    margin: auto;\\n}\\n\\n.inputalign{\\n    margin:auto;\\n}\\n\\n.bgiborder{\\n    background-image:url('/src/assets/banner.jpg');\\n}\"","module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center container bgiborder\\\">\\r\\n  <div>\\r\\n    <br/>\\r\\n      <input class=\\\"form-control mr-sm-4 col-md-12\\\" type=\\\"text\\\" placeholder=\\\"Enter your City\\\"\\r\\n      [(ngModel)]=\\\"searchProperty\\\">\\r\\n      <br/>\\r\\n      <p>Available Properties: {{ (properties | filterProperty:searchProperty)?.length}} </p>\\r\\n  </div>\\r\\n</div>\\r\\n<div>\\r\\n\\r\\n</div>\\r\\n    <br/><br/>\\r\\n    <div class=\\\"media border p-3 \\\" *ngFor=\\\"let property of properties | filterProperty:searchProperty \\\">\\r\\n        <br/><br/>\\r\\n        \\r\\n        <img [src]=\\\"property.cover\\\" [alt]=\\\"property.street\\\" class=\\\"mr-3 mt-3 rounded-circle\\\" style=\\\"width:200px;height:200px\\\">\\r\\n        <div class=\\\"media-body divcenter\\\">\\r\\n          <br/><br/>\\r\\n          <h4>{{property.street}}</h4>\\r\\n          <h4>{{property.city}}</h4>\\r\\n          <p>Price: {{property.price|currency}}</p>\\r\\n          <p>{{property.description}}</p>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" style=\\\"margin:2%\\\" [routerLink]=\\\"['/form']\\\">\\r\\n            Book Property\\r\\n          </button>\\r\\n          \\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" style=\\\"margin:2%\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#'+property.city\\\">\\r\\n            Show Details\\r\\n          </button>\\r\\n          <!-- The Modal -->\\r\\n          <div class=\\\"modal fade\\\" [id]=\\\"property.city\\\">\\r\\n            <div class=\\\"modal-dialog\\\">\\r\\n              <div class=\\\"modal-content\\\">\\r\\n              \\r\\n                <!-- Modal Header -->\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                  <h4 class=\\\"modal-title\\\">{{property.street}}</h4>\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                </div>\\r\\n                \\r\\n                <!-- Modal body -->\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                  <br/><br/>\\r\\n                    <img [src]=\\\"property.cover\\\" [alt]=\\\"property.street\\\" class=\\\"mr-3 mt-3 rounded-circle\\\" style=\\\"width:200px;height:200px\\\"> \\r\\n                    <p>Address: {{property.street}}</p>\\r\\n                    <p>City: {{property.city}}</p>\\r\\n                    <p>Price: {{property.price|currency}}</p>\\r\\n                    <p>Description: {{property.description}}</p>\\r\\n                </div>\\r\\n                \\r\\n                <!-- Modal footer -->\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                </div>\\r\\n                \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PropertyService } from '../services/propertyService.service';\r\nimport { IProperty } from '../models/propertyData.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-property',\r\n    templateUrl: './property.component.html',\r\n    styleUrls: ['./property.component.css']\r\n})\r\n\r\nexport class PropertyComponent implements OnInit {\r\n    title: String = '*****Product List';\r\n    showTable: Boolean = true;\r\n    showImage: Boolean = false;\r\n    serachPhone: string;\r\n    imageWidth: Number = 50;\r\n    properties: IProperty[];\r\n\r\n    constructor(private _propertySerivce: PropertyService) {}\r\n\r\n    ngOnInit(): void {\r\n        this._propertySerivce.getProperty()\r\n            .subscribe((data) => this.properties = data);\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IProperty } from '../models/propertyData.model';\n\n@Pipe ({\n    name: 'filterProperty'\n})\n\nexport class FilterPipe implements PipeTransform {\n    transform(value: IProperty[], filterBy: string): IProperty[] {\n        filterBy = filterBy ? filterBy.toLowerCase() : null ;\n        return filterBy ? value.filter((product: IProperty) =>\n            product.city.toLowerCase().indexOf(filterBy) !== -1) : value;\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PostBooking } from '../models/postBooking.model';\r\nimport { IProperty } from '../models/propertyData.model';\r\n\r\n\r\n@Injectable()\r\n\r\n// For RxJS >6.0.0\r\nexport class PropertyService {\r\n\r\n    constructor(private _http: HttpClient,\r\n                private __http: Http) {\r\n                }\r\n\r\n\r\n    getProperty(): Observable<IProperty[]> {\r\n        return this._http.get<IProperty[]>('/api/getAllProperty');\r\n    }\r\n\r\n\r\n    postBooking(bookData: PostBooking): Observable<any> {\r\n        const body = JSON.stringify(bookData);\r\n        const headers = new Headers({'Content-Type': 'application/json'});\r\n        const options = new RequestOptions({headers: headers});\r\n        return this.__http.post('/api/addData', body, options);\r\n\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        return Observable.throw(error.statusText || 'Server error');\r\n      }\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}